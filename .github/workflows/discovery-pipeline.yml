name: CI/CD Discovery Pipeline

on:
  push:
    branches:
      - main  
    paths:  
      - '.github/workflows/discovery-pipeline.yml'
      - 'services/discovery/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        working-directory: services/discovery
        run: mvn clean package -DskipTests

      - name: Archive JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: discovery.jar
          path: services/discovery/target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for SonarCloud

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run unit tests
        working-directory: services/discovery
        run: mvn test

      - name: SonarCloud Analysis
        working-directory: services/discovery
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=Zeineb2001_PFE_project \
            -Dsonar.organization=zeineb2001 \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.java.binaries=target

  push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: services/discovery
        run: |
          TAG=v${{ github.run_number }}
          echo "Building and pushing image with tag $TAG"        
          docker build -t ${{ secrets.DOCKER_USERNAME }}/discovery:$TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/discovery:$TAG

  deploy:
    runs-on: ubuntu-latest
    needs: push
    permissions:
      contents: write
    steps:
      - name: Checkout source code repository
        uses: actions/checkout@v3
        with:
          repository: Zeineb2001/PFE_project

      - name: Clone deployment repository
        uses: actions/checkout@v3
        with:
          repository: Zeineb2001/PFE_project_deploy
          path: PFE_project_deploy
          token: ${{ secrets.GH_TOKEN }}

      - name: Update Image Version in values.yaml
        run: |
          yq eval '.discovery.image.repository = "${{ secrets.DOCKER_USERNAME }}/discovery" |
                   .discovery.image.tag = "v${{ github.run_number }}"' \
            -i PFE_project_deploy/App-chart/values.yaml
      - name: Commit changes to PFE_project_deploy repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update image version to v${{ github.run_number }}"
          file_pattern: "App-chart/values.yaml"
          repository: ./PFE_project_deploy
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          commit_author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
      - name: Show updated values.yaml
        run: cat PFE_project_deploy/App-chart/values.yaml
        
      - name: Push changes to PFE_project_deploy repository
        run: |
          cd PFE_project_deploy
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/Zeineb2001/PFE_project_deploy.git
          git push origin main













