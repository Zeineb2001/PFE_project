name: CI/CD Discovery Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        working-directory: services/discovery
        run: mvn clean package -DskipTests

      - name: Archive JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: discovery.jar
          path: services/discovery/target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for SonarCloud

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run unit tests
        working-directory: services/discovery
        run: mvn test

      - name: SonarCloud Analysis
        working-directory: services/discovery
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=Zeineb2001_PFE_project \
            -Dsonar.organization=zeineb2001 \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.java.binaries=target

  push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: services/discovery
        run: |
          # Build and push Docker image to DockerHub
          docker build -t ${{ secrets.DOCKER_USERNAME }}/discovery:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/discovery:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Checkout the source code repository
        uses: actions/checkout@v3
        with:
          repository: Zeineb2001/PFE_project 

      - name: Clone PFE_project_deploy repository
        uses: actions/checkout@v3
        with:
          repository: Zeineb2001/PFE_project_deploy  
          path: PFE_project_deploy

      - name: Update Image Version in values.yaml
        id: imgupd
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.image.repository = "${{ secrets.DOCKER_USERNAME }}/discovery" | .image.tag = "latest"' -i PFE_project_deploy/App-chart/values.yaml

      - name: Commit changes to PFE_project_deploy repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update image version to latest"
          file_pattern: "PFE_project_deploy/App-chart/values.yaml"  # Corrected 'add' to 'file_pattern'

      - name: Push changes to PFE_project_deploy repository
        run: |
          cd PFE_project_deploy
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://github.com/${{ github.actor}}:${{ secrets.GH_TOKEN }}@github.com/Zeineb2001/PFE_project_deploy.git  
          git push origin main 













