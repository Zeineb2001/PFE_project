name: CI/CD product pipeline

on:
  push:
    branches:
      - main
    paths:  
      - '.github/workflows/product-pipeline.yml'
      - 'services/product/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        working-directory: services/product
        run: mvn clean package -DskipTests

      - name: Archive JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: product.jar
          path: services/product/target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: alibou
          POSTGRES_PASSWORD: alibou
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Wait for Postgres to be ready
        run: sleep 20

      - name: Create product database
        run: |
          PGPASSWORD=alibou psql -h localhost -U alibou -d postgres \
            -c "CREATE DATABASE product;"

      - name: Run unit tests
        working-directory: services/product
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/product
          SPRING_DATASOURCE_USERNAME: alibou
          SPRING_DATASOURCE_PASSWORD: alibou
        run: mvn test

      - name: SonarCloud Analysis
        working-directory: services/product
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=Zeineb2001_PFE_project \
            -Dsonar.organization=zeineb2001 \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.java.binaries=target

  push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: services/product
        run: |
          TAG=v${{ github.run_number }}
          echo "Building and pushing image with tag $TAG"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/product:$TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/product:$TAG

  deploy:
    runs-on: ubuntu-latest
    needs: push
    permissions:
      contents: write
    steps:
      - name: Checkout the source code repository
        uses: actions/checkout@v3
        with:
          repository: Zeineb2001/PFE_project

      - name: Clone PFE_project_deploy repository
        uses: actions/checkout@v3
        with:
          repository: Zeineb2001/PFE_project_deploy
          path: PFE_project_deploy
          token: ${{ secrets.GH_TOKEN }}

      - name: Update Image Version in values.yaml
        id: imgupd
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.image.repository = "${{ secrets.DOCKER_USERNAME }}/product" | .image.tag = "v'${{ github.run_number }}'"' -i PFE_project_deploy/App-chart/values.yaml

      - name: Commit changes to PFE_project_deploy repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update image version to v${{ github.run_number }}"
          file_pattern: "PFE_project_deploy/App-chart/values.yaml"

      - name: Push changes to PFE_project_deploy repository
        run: |
          cd PFE_project_deploy
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin \
            https://$GITHUB_ACTOR:${{ secrets.GH_TOKEN }}@github.com/Zeineb2001/PFE_project_deploy.git
          git push origin main

