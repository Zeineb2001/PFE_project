eureka:
  instance:
  hostname: discovery
  client:
    register-with-eureka: true  # À mettre à true si vous voulez que la gateway s'enregistre
    fetch-registry: true   
    service-url:
      defaultZone: http://discovery:8761/eureka

server:
  port: 8040

spring:
  application:
    name: notification-service
  cloud:
    config:
      override-system-properties: false   
  data:
    mongodb:
      username: alibou
      password: alibou
      host: mongodb
      port: 27017
      database: notification
      authentication-database: admin

  kafka:
    consumer:
      bootstrap-servers: kafka:9092
      group-id: paymentGroup,orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: orderConfirmation:com.alibou.ecommerce.kafka.order.OrderConfirmation,paymentConfirmation:com.alibou.ecommerce.kafka.payment.PaymentConfirmation
  mail:
    host: mail-dev
    port: 1025
    username: alibou
    password: alibou
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000


management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
